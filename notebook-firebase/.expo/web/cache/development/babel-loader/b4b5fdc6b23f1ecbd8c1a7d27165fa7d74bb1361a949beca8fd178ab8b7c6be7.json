{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport firebase from \"../config.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditNote = function EditNote(_ref) {\n  var route = _ref.route;\n  var nav = useNavigation();\n  var item = route.params.item;\n  var _useState = useState(item.title),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(item.body),\n    _useState4 = _slicedToArray(_useState3, 2),\n    body = _useState4[0],\n    setBody = _useState4[1];\n  var handleEdit = function handleEdit() {\n    if (title && title.length > 0 && body && body.length > 0) {\n      firebase.firestore().collection('notes').doc(item.id).update({\n        title: title,\n        body: body\n      }).then(function () {\n        nav.navigate('details');\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"A neat little title...\",\n      value: title,\n      onChangeText: function onChangeText(text) {\n        return setTitle(text);\n      },\n      style: styles.titleInput\n    }), _jsx(TextInput, {\n      placeholder: \"And the rest goes here...\",\n      value: body,\n      onChangeText: function onChangeText(text) {\n        return setBody(text);\n      },\n      style: styles.bodyInput,\n      multiline: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.updateButton,\n      onPress: handleEdit,\n      children: _jsx(Text, {\n        style: styles.updateButtonText,\n        children: \"UPDATE\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#ffecb8'\n  },\n  titleInput: {\n    backgroundColor: '#ffffff',\n    borderRadius: 5,\n    fontSize: 15,\n    marginTop: 20,\n    height: 50,\n    width: '90%',\n    borderWidth: 1,\n    borderColor: '#808080',\n    padding: 10\n  },\n  bodyInput: {\n    backgroundColor: '#ffffff',\n    borderRadius: 5,\n    fontSize: 15,\n    marginTop: 20,\n    marginBottom: 10,\n    height: 100,\n    width: '90%',\n    borderWidth: 1,\n    borderColor: '#808080',\n    padding: 10\n  },\n  updateButton: {\n    backgroundColor: '#ff8400',\n    marginTop: 20,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: -1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 5,\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  updateButtonText: {\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default EditNote;","map":{"version":3,"names":["React","useState","useNavigation","firebase","EditNote","route","nav","item","params","title","setTitle","body","setBody","handleEdit","length","firestore","collection","doc","id","update","then","navigate","catch","error","alert","styles","container","text","titleInput","bodyInput","updateButton","updateButtonText","StyleSheet","create","flex","alignItems","backgroundColor","borderRadius","fontSize","marginTop","height","width","borderWidth","borderColor","padding","marginBottom","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","position","bottom","color","fontWeight"],"sources":["/home/kasper/Documents/fourthsemester/mobiledev/notebook-firebase/components/EditNote.js"],"sourcesContent":["// dependencies\nimport {StyleSheet, View, Text, TextInput, TouchableOpacity} from 'react-native'\nimport React, {useState} from 'react'\nimport {useNavigation} from '@react-navigation/native';\n\n// components\nimport firebase from '../config.js';\n\n// component\nconst EditNote = ({route}) => {\n\n    const nav = useNavigation();\n    const {item} = route.params;\n    const [title, setTitle] = useState(item.title);\n    const [body, setBody] = useState(item.body);\n\n    const handleEdit = () => {\n        if (title && title.length > 0 && body && body.length > 0) {\n            firebase.firestore()\n                .collection('notes')\n                .doc(item.id)\n                .update({title: title, body: body})\n                .then(() => {\n                    nav.navigate('details');\n                })\n                .catch((error) => {\n                    alert(error);\n                });\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <TextInput\n                placeholder='A neat little title...'\n                value={title}\n                onChangeText={(text) => setTitle(text)}\n                style={styles.titleInput}\n            />\n            <TextInput\n                placeholder='And the rest goes here...'\n                value={body}\n                onChangeText={(text) => setBody(text)}\n                style={styles.bodyInput}\n                multiline={true}    \n            />\n            <TouchableOpacity style={styles.updateButton} onPress={handleEdit}>\n                <Text style={styles.updateButtonText}>UPDATE</Text>\n            </TouchableOpacity>\n        </View>\n    );\n\n};\n\n// styling\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        backgroundColor: '#ffecb8'\n    },\n    titleInput: {\n        backgroundColor: '#ffffff',\n        borderRadius: 5,\n        fontSize: 15,\n        marginTop: 20,\n        height: 50 ,\n        width: '90%',\n        borderWidth: 1,\n        borderColor: '#808080',\n        padding: 10\n    },\n    bodyInput: {\n        backgroundColor: '#ffffff',\n        borderRadius: 5,\n        fontSize: 15,\n        marginTop: 20,\n        marginBottom: 10,\n        height: 100,\n        width: '90%',\n        borderWidth: 1,\n        borderColor: '#808080',\n        padding: 10\n    },\n    updateButton: {\n        backgroundColor: '#ff8400',\n        marginTop: 20,\n        height: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        shadowColor: '#000000',\n        shadowOffset: {width: 0, height: -1},\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n        elevation: 5,\n        position: 'absolute',\n        bottom: 0,\n        width: '100%'\n    },\n    updateButtonText: {\n        color: '#ffffff',\n        fontSize: 18,\n        fontWeight: 'bold'\n    }\n});\n\n// export\nexport default EditNote;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}