{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from 'expo-image-picker';\nimport firebase from \"../config.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddNote = function AddNote() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    upload = _useState4[0],\n    setUpload = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    title = _useState6[0],\n    setTitle = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    body = _useState8[0],\n    setBody = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    filename = _useState10[0],\n    setFilename = _useState10[1];\n  var handleAdd = function handleAdd() {\n    if (title != null && body != null && image != null) {\n      uploadImage();\n      firebase.firestore().collection('notes').add({\n        title: title,\n        body: body,\n        filename: filename\n      }).then(function () {\n        setTitle();\n        setBody();\n        setFilename();\n        Keyboard.dismiss();\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  };\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false,\n        aspect: [4, 3],\n        quality: 1\n      });\n      var src = {\n        uri: result.uri\n      };\n      setImage(src);\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var uploadImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setUpload(true);\n      var response = yield fetch(image.uri);\n      var blob = yield response.blob();\n      var filename = image.uri.substring(image.uri.lastIndexOf('/') + 1);\n      setFilename(filename);\n      var ref = firebase.storage().ref().child(filename).put(blob);\n      try {\n        yield ref;\n      } catch (error) {\n        console.log(error);\n      }\n      setUpload(false);\n      setImage(null);\n    });\n    return function uploadImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"A neat little title...\",\n      value: title,\n      onChangeText: function onChangeText(text) {\n        return setTitle(text);\n      },\n      style: styles.titleInput\n    }), _jsx(TextInput, {\n      placeholder: \"And the rest goes here...\",\n      value: body,\n      onChangeText: function onChangeText(text) {\n        return setBody(text);\n      },\n      style: styles.bodyInput,\n      multiline: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.pickImageButton,\n      onPress: pickImage,\n      children: _jsx(Text, {\n        style: styles.pickImageText,\n        children: \"ADD IMAGE\"\n      })\n    }), _jsx(View, {\n      style: styles.imageWrapper,\n      children: image && _jsx(Image, {\n        source: {\n          uri: image.uri\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: handleAdd,\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \"DONE\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#ffecb8'\n  },\n  titleInput: {\n    backgroundColor: '#ffffff',\n    borderRadius: 5,\n    fontSize: 15,\n    marginTop: 20,\n    height: 50,\n    width: '90%',\n    borderWidth: 1,\n    borderColor: '#808080',\n    padding: 10\n  },\n  bodyInput: {\n    backgroundColor: '#ffffff',\n    borderRadius: 5,\n    fontSize: 15,\n    marginTop: 20,\n    marginBottom: 10,\n    height: 100,\n    width: '90%',\n    borderWidth: 1,\n    borderColor: '#808080',\n    padding: 10\n  },\n  addButton: {\n    backgroundColor: '#ff8400',\n    marginTop: 20,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: -1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 5,\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  addButtonText: {\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  pickImageButton: {\n    backgroundColor: '#ff8400',\n    marginTop: 15,\n    height: 50,\n    paddingHorizontal: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: -1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 1,\n    elevation: 5\n  },\n  pickImageText: {\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  imageWrapper: {\n    marginTop: 25\n  }\n});\nexport default AddNote;","map":{"version":3,"names":["React","useState","ImagePicker","firebase","AddNote","image","setImage","upload","setUpload","title","setTitle","body","setBody","filename","setFilename","handleAdd","uploadImage","firestore","collection","add","then","Keyboard","dismiss","catch","error","alert","pickImage","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","src","uri","response","fetch","blob","substring","lastIndexOf","ref","storage","child","put","console","log","styles","container","text","titleInput","bodyInput","pickImageButton","pickImageText","imageWrapper","width","height","addButton","addButtonText","StyleSheet","create","flex","alignItems","backgroundColor","borderRadius","fontSize","marginTop","borderWidth","borderColor","padding","marginBottom","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","position","bottom","color","fontWeight","paddingHorizontal"],"sources":["/home/kasper/Documents/fourthsemester/mobiledev/notebook-firebase/components/AddNote.js"],"sourcesContent":["// dependencies\nimport React, {useState} from 'react';\nimport {StyleSheet, View, Text, Keyboard, TextInput, TouchableOpacity, Image} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\n\n// components\nimport firebase from '../config.js';\n\n// component\nconst AddNote = () => {\n    \n    const [image, setImage] = useState(null);\n    const [upload, setUpload] = useState(false);\n\n    const [title, setTitle] = useState();\n    const [body, setBody] = useState();\n    const [filename, setFilename] = useState();\n\n    const handleAdd = () => {\n        if (title != null && body != null && image != null) {\n            uploadImage();\n            firebase.firestore()\n                .collection('notes')\n                .add({title, body, filename})\n                .then(() => {\n                    setTitle();\n                    setBody();\n                    setFilename();\n                    Keyboard.dismiss();\n                })\n                .catch((error) => {\n                    alert(error);\n                });\n        } \n    };\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: false,\n            aspect: [4,3],\n            quality: 1\n        });\n\n        const src = {uri: result.uri};\n        setImage(src);\n    };\n\n    const uploadImage = async () => {\n        setUpload(true);\n        const response = await fetch(image.uri);\n        const blob = await response.blob();\n        const filename = image.uri.substring(image.uri.lastIndexOf('/') + 1);\n        setFilename(filename);\n        const ref = firebase.storage().ref().child(filename).put(blob);\n        try {\n            await ref;\n        } catch (error) {\n            console.log(error);\n        }\n        setUpload(false);\n        setImage(null); \n    };\n\n    return (\n        <View style={styles.container}>\n            <TextInput\n                placeholder='A neat little title...'\n                value={title}\n                onChangeText={(text) => setTitle(text)}\n                style={styles.titleInput} \n            />\n            <TextInput\n                placeholder='And the rest goes here...'\n                value={body}\n                onChangeText={(text) => setBody(text)}\n                style={styles.bodyInput}\n                multiline={true}    \n            />\n            <TouchableOpacity style={styles.pickImageButton} onPress={pickImage}>\n                <Text style={styles.pickImageText}>ADD IMAGE</Text>\n            </TouchableOpacity>\n            <View style={styles.imageWrapper}>\n                {image && <Image source={{uri: image.uri}} style={{width: 200, height: 200}}/>}\n            </View>\n            <TouchableOpacity style={styles.addButton} onPress={handleAdd}>\n                <Text style={styles.addButtonText}>DONE</Text>\n            </TouchableOpacity>\n        </View>\n    );\n\n};\n\n// styling\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        backgroundColor: '#ffecb8'\n    },\n    titleInput: {\n        backgroundColor: '#ffffff',\n        borderRadius: 5,\n        fontSize: 15,\n        marginTop: 20,\n        height: 50 ,\n        width: '90%',\n        borderWidth: 1,\n        borderColor: '#808080',\n        padding: 10\n    },\n    bodyInput: {\n        backgroundColor: '#ffffff',\n        borderRadius: 5,\n        fontSize: 15,\n        marginTop: 20,\n        marginBottom: 10,\n        height: 100,\n        width: '90%',\n        borderWidth: 1,\n        borderColor: '#808080',\n        padding: 10\n    },\n    addButton: {\n        backgroundColor: '#ff8400',\n        marginTop: 20,\n        height: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        shadowColor: '#000000',\n        shadowOffset: {width: 0, height: -1},\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n        elevation: 5,\n        position: 'absolute',\n        bottom: 0,\n        width: '100%'\n    },\n    addButtonText: {\n        color: '#ffffff',\n        fontSize: 18,\n        fontWeight: 'bold'\n    },\n    pickImageButton: {\n        backgroundColor: '#ff8400',\n        marginTop: 15,\n        height: 50,\n        paddingHorizontal: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        shadowColor: '#000000',\n        shadowOffset: {width: 0, height: -1},\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n        elevation: 5\n    },\n    pickImageText: {\n        color: '#ffffff',\n        fontSize: 18,\n        fontWeight: 'bold'\n    },\n    imageWrapper: {\n        marginTop: 25\n    }\n});\n\n// export\nexport default AddNote;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}